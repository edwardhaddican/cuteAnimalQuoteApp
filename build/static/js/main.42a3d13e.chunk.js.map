{"version":3,"sources":["components/Main.js","components/Quote.js","components/CuteAnimals.js","index.js"],"names":["Main","useState","allAnimalPics","setAllAnimalPics","quoteArray","setQuoteArray","randomQuoteNum","setQuoteRandomNum","randomAnimalPicNum","setRandomAnimalPicNum","quoteRandomNumberGenerator","useCallback","Math","floor","random","length","animalRandomNumberGenerator","a","axios","get","data","console","error","fetchAllQuotes","response","useEffect","fetchAllAnimals","className","onClick","Quote","text","CuteAnimals","src","imagePath","alt","ReactDOM","render","document","getElementById"],"mappings":"sRAgFeA,EA5EF,WACX,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4CJ,qBAA5C,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAoDN,qBAApD,mBAAOO,EAAP,KAA2BC,EAA3B,KAEMC,EAA6BC,uBAAY,WAG7C,OAFiBC,KAAKC,MAAMD,KAAKE,SAAWV,EAAWW,UAGtD,CAACX,IAEEY,EAA8BL,uBAAY,WAG9C,OAFiBC,KAAKC,MAAMD,KAAKE,SAAWZ,EAAca,UAGzD,CAACb,IAhBa,4CAoBjB,8BAAAe,EAAA,+EAE2BC,IAAMC,IAC3B,sDAHN,gBAEYC,EAFZ,EAEYA,KAGRjB,EAAiBiB,GALrB,gDAOIC,QAAQC,MAAR,MAPJ,0DApBiB,sBA+BjB,IAAMC,EAAiBZ,sBAAW,sBAAC,4BAAAM,EAAA,+EAERC,IAAMC,IAAI,+BAFF,OAEzBK,EAFyB,OAG/BnB,EAAcmB,EAASJ,MAHQ,oHAOhC,IAYH,OAVAK,qBAAU,YAxCO,mCAyCfC,GACAH,MACC,IAEHE,qBAAU,WACRlB,EAAkBG,KAClBD,EAAsBO,OACrB,CAACd,IAGF,yBAAKyB,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,0BACb,4BACEA,UAAU,cACVC,QAAS,WACPrB,EAAkBG,KAClBD,EAAsBO,OAJ1B,YAUA,kBAAC,EAAD,CACEd,cAAeA,EACfC,iBAAkBA,EAClBK,mBAAoBA,IAEtB,kBAAC,EAAD,CAAOF,eAAgBA,EAAgBF,WAAYA,QCvD9CyB,EAdD,SAAC,GAAkC,IAAjCzB,EAAgC,EAAhCA,WAAYE,EAAoB,EAApBA,eAC1B,OACE,yBAAKqB,UAAU,wBACb,6BACGrB,GAAkBF,EAAWW,OAAS,EACrC,4BAAKX,EAAWE,GAAgBwB,MAEhC,0CCSKC,EAlBK,SAAC,GAA2C,IAAzC7B,EAAwC,EAAxCA,cAAeM,EAAyB,EAAzBA,mBACpC,OACE,yBAAKmB,UAAU,+BACb,6BACGnB,GAAsBN,EAAca,OAAS,EAC5C,yBACEY,UAAU,WACVK,IAAK9B,EAAcM,GAAoByB,UACvCC,IAAI,yBAGN,0C,MCNVC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.42a3d13e.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Quote, CuteAnimals } from \"./index\";\n\nconst Main = () => {\n  const [allAnimalPics, setAllAnimalPics] = useState([]);\n  const [quoteArray, setQuoteArray] = useState([]);\n  const [randomQuoteNum, setQuoteRandomNum] = useState();\n  const [randomAnimalPicNum, setRandomAnimalPicNum] = useState();\n\n  const quoteRandomNumberGenerator = useCallback(() => {\n    let currentNum = Math.floor(Math.random() * quoteArray.length);\n    // setQuoteRandomNum(currentNum);\n    return currentNum;\n  }, [quoteArray]);\n\n  const animalRandomNumberGenerator = useCallback(() => {\n    let currentNum = Math.floor(Math.random() * allAnimalPics.length);\n    // setRandomAnimalPicNum(currentNum);\n    return currentNum;\n  }, [allAnimalPics]);\n\n  //https://cute-animals-api.herokuapp.com/api/animals?category=elephants\n\n  async function fetchAllAnimals() {\n    try {\n      const { data } = await axios.get(\n        \"https://cute-animals-api.herokuapp.com/api/animals\"\n      );\n      setAllAnimalPics(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const fetchAllQuotes = useCallback(async () => {\n    try {\n      const response = await axios.get(\"https://type.fit/api/quotes\");\n      setQuoteArray(response.data);\n    } catch (err) {\n      throw err;\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchAllAnimals();\n    fetchAllQuotes();\n  }, []);\n\n  useEffect(() => {\n    setQuoteRandomNum(quoteRandomNumberGenerator());\n    setRandomAnimalPicNum(animalRandomNumberGenerator());\n  }, [allAnimalPics]);\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"main-container-background-img\">\n        <div className=\"animal-quote-container\">\n          <button\n            className=\"main-button\"\n            onClick={() => {\n              setQuoteRandomNum(quoteRandomNumberGenerator());\n              setRandomAnimalPicNum(animalRandomNumberGenerator());\n            }}\n          >\n            Click Me\n          </button>\n\n          <CuteAnimals\n            allAnimalPics={allAnimalPics}\n            setAllAnimalPics={setAllAnimalPics}\n            randomAnimalPicNum={randomAnimalPicNum}\n          />\n          <Quote randomQuoteNum={randomQuoteNum} quoteArray={quoteArray} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\n//https://forum.freecodecamp.org/t/free-api-inspirational-quotes-json-with-code-examples/311373\n\nconst Quote = ({quoteArray, randomQuoteNum}) => {\n  return (\n    <div className=\"quote-main-container\">\n      <div >\n        {randomQuoteNum && quoteArray.length > 0 ? (\n          <h2>{quoteArray[randomQuoteNum].text}</h2>\n        ) : (\n          <h1>Loading</h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Quote;\n","import React from \"react\";\n\nconst CuteAnimals = ({ allAnimalPics, randomAnimalPicNum }) => {\n  return (\n    <div className=\"cute-animals-main-container\">\n      <div>\n        {randomAnimalPicNum && allAnimalPics.length > 0 ? (\n          <img\n            className=\"imageTag\"\n            src={allAnimalPics[randomAnimalPicNum].imagePath}\n            alt=\"cute animal pictures\"\n          />\n        ) : (\n          <h1>Loading</h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CuteAnimals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Main } from \"./components\";\nimport \"./styles/main.css\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <Main />\n  </Router>,\n  document.getElementById(\"app\")\n);\n\n// serviceWorker.register();\n"],"sourceRoot":""}